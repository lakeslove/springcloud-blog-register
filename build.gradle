plugins {
	id 'org.springframework.boot' version '2.1.5.RELEASE'
	id 'java'
}

apply plugin: 'io.spring.dependency-management'

group = 'com.lakeslove'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}


repositories {
	mavenLocal()
	maven {
		name "aliyun1"
		url 'http://maven.aliyun.com/nexus/content/groups/public'
	}
	maven {
		name "aliyun2"
		url 'http://maven.aliyun.com/mvn/repository/'
	}
	maven {
		name "spring repo"
		url "http://repo.spring.io/release"
	}
	maven {
		name "spring milestone"
		url "https://repo.spring.io/milestone/"
	}
	jcenter()
	mavenCentral()
}

ext {
	set('springCloudVersion', "Greenwich.SR1")
}

dependencies {
	implementation 'org.springframework.cloud:spring-cloud-starter'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-freemarker'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.1'

	compile group: 'jstl', name: 'jstl', version: '1.2'
	compile('org.apache.tomcat.embed:tomcat-embed-jasper')
	compile(group: 'org.apache.tiles', name: 'tiles-jsp', version: '3.0.4')
	compile(group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3')
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

processResources {
	from('src/main/java') {
		include '**/*.xml'
	}
}
